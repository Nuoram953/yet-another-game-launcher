// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id                     String            @id @default(uuid())
  externalId             Int?
  name                   String
  lastTimePlayed         BigInt?
  isInstalled            Boolean           @default(false)
  gameStatus             GameStatus        @relation(fields: [gameStatusId], references: [id])
  gameStatusId           Int
  storefront             Storefront?       @relation(fields: [storefrontId], references: [id])
  storefrontId           Int?
  timePlayed             Int               @default(0)
  timePlayedWindows      Int               @default(0)
  timePlayedLinux        Int               @default(0)
  timePlayedMac          Int               @default(0)
  timePlayedSteamdeck    Int               @default(0)
  timePlayedDisconnected Int               @default(0)
  size                   BigInt?           @default(0)
  location               String?
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  activities             GameActivity[]
  achievements           GameAchievement[]
  developpers            GameDevelopper[]
  publishers             GamePublisher[]

  @@unique([externalId, storefrontId])
}

model GameStatus {
  id   Int    @id @default(autoincrement())
  name String @unique
  Game Game[]
}

model GameActivity {
  id        Int    @id @default(autoincrement())
  gameId    String
  game      Game   @relation(fields: [gameId], references: [id])
  startedAt BigInt
  endedAt   BigInt
  duration  Int

  @@index([gameId])
}

model Developper {
  id             String           @id @default(uuid())
  name           String
  GameDevelopper GameDevelopper[]
}

model GameDevelopper {
  id           String     @id @default(uuid())
  gameId       String
  game         Game       @relation(fields: [gameId], references: [id])
  developperId String
  developper   Developper @relation(fields: [developperId], references: [id])
}

model GamePublisher {
  id         String    @id @default(uuid())
  gameId     String
  game       Game      @relation(fields: [gameId], references: [id])
  publisheId String
  publisher  Publisher @relation(fields: [publisheId], references: [id])
}

model Publisher {
  id            String          @id @default(uuid())
  name          String
  GamePublisher GamePublisher[]
}

model GameAchievement {
  id         String  @id @default(uuid())
  gameId     String
  game       Game    @relation(fields: [gameId], references: [id])
  name       String
  isHidden   Boolean @default(false)
  isUnlocked Boolean @default(false)
  unlockedAt BigInt

  @@index([gameId])
}

model Storefront {
  id   Int    @id @default(autoincrement())
  name String @unique
  Game Game[]
}
