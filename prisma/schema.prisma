// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id                     String            @id @default(uuid())
  externalId             Int?
  name                   String
  lastTimePlayed         BigInt?
  isInstalled            Boolean           @default(false)
  isFavorite             Boolean           @default(false)
  gameStatus             GameStatus        @relation(fields: [gameStatusId], references: [id])
  gameStatusId           Int
  storefront             Storefront?       @relation(fields: [storefrontId], references: [id])
  storefrontId           Int?
  timePlayed             Int               @default(0)
  timePlayedWindows      Int               @default(0)
  timePlayedLinux        Int               @default(0)
  timePlayedMac          Int               @default(0)
  timePlayedSteamdeck    Int               @default(0)
  timePlayedDisconnected Int               @default(0)
  size                   BigInt?           @default(0)
  location               String?
  scoreCritic            Int?
  scoreCommunity         Int?
  scoreUser              Int?
  summary                String?
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  activities             GameActivity[]
  achievements           GameAchievement[]
  developers             GameDeveloper[]
  publishers             GamePublisher[]
  tags                   GameTag[]
  engines                GameEngine[]

  @@unique([externalId, storefrontId])
}

model GameStatus {
  id   Int    @id @default(autoincrement())
  name String @unique
  Game Game[]
}

model GameActivity {
  id        Int    @id @default(autoincrement())
  gameId    String
  game      Game   @relation(fields: [gameId], references: [id])
  startedAt BigInt
  endedAt   BigInt
  duration  Int

  @@index([gameId])
}

model Company {
  id            String          @id @default(uuid())
  name          String          @unique
  GameDeveloper GameDeveloper[]
  GamePublisher GamePublisher[]
}

model Engine {
  id         String       @id @default(uuid())
  name       String       @unique
  GameEngine GameEngine[]
}

model GameEngine {
  id       String @id @default(uuid())
  gameId   String
  game     Game   @relation(fields: [gameId], references: [id])
  engineId String
  engine   Engine @relation(fields: [engineId], references: [id])

  @@unique([gameId, engineId])
}

model Tag {
  id      String    @id @default(uuid())
  name    String    @unique
  GameTag GameTag[]
}

model GameTag {
  id                  String  @id @default(uuid())
  gameId              String
  game                Game    @relation(fields: [gameId], references: [id])
  tagId               String
  tag                 Tag     @relation(fields: [tagId], references: [id])
  isGenre             Boolean @default(false)
  isTheme             Boolean @default(false)
  isGameMode          Boolean @default(false)
  isPlayerPerspective Boolean @default(false)

  @@unique([gameId, tagId])
}

model GameDeveloper {
  id        String  @id @default(uuid())
  gameId    String
  game      Game    @relation(fields: [gameId], references: [id])
  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([gameId, companyId])
}

model GamePublisher {
  id        String  @id @default(uuid())
  gameId    String
  game      Game    @relation(fields: [gameId], references: [id])
  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  @@unique([gameId, companyId])
}

model GameAchievement {
  id          String  @id @default(uuid())
  gameId      String
  game        Game    @relation(fields: [gameId], references: [id])
  externalId  String
  name        String
  description String?
  rarity      Int?
  isHidden    Boolean @default(false)
  isUnlocked  Boolean @default(false)
  unlockedAt  BigInt?

  @@unique([gameId, externalId])
  @@index([gameId])
}

model Storefront {
  id   Int    @id @default(autoincrement())
  name String @unique
  Game Game[]
}
