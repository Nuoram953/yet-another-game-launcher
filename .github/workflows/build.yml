name: Build/release Electron app
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - beta

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean build output
        run: rm -rf dist

      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_HARD_LINKS: false

      # - name: Build Electron app (Windows)
      #   if: matrix.os == 'windows-latest'
      #   run: npm run build:windows
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Build Electron app (macOS)
      #   if: matrix.os == 'macos-latest'
      #   run: npm run build:mac
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist/electron/*.AppImage
            dist/electron/*.deb
            dist/electron/*.rpm
            dist/electron/*.tar.gz
          retention-days: 30

      # - name: Upload artifacts (Windows)
      #   if: matrix.os == 'windows-latest'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: windows-build
      #     path: |
      #       dist/electron/*.exe
      #       dist/electron/*.msi
      #       dist/electron/*.appx
      #     retention-days: 30
      #
      # - name: Upload artifacts (macOS)
      #   if: matrix.os == 'macos-latest'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: macos-build
      #     path: |
      #       dist/electron/*.dmg
      #       dist/electron/*.zip
      #       dist/electron/*.pkg
      #     retention-days: 30
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for semantic-release

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
